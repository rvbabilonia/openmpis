<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Message">
    <!-- Type alias allow you to use a shorter name for long fully qualified class names. -->
    <typeAlias alias="message" type="com.googlecode.openmpis.dto.Message"/>
    
    <cacheModel id="messageCache" type="LRU">
        <flushOnExecute statement="insertSighting"/>
        <flushOnExecute statement="insertFeedback"/>
        <flushOnExecute statement="deleteMessage"/>
        <flushOnExecute statement="updateMessage"/>
        <flushInterval hours="24"/>
    </cacheModel>

    <sql id="messageColumnsFragment">
        ID as id,
        FIRSTNAME as firstName,
        LASTNAME as lastName,
        SUBJECT as subject,
        MESSAGE as message,
        STATUS as status,
        EMAIL as email,
        IPADDRESS as ipAddress,
        PERSONID as personId,
        USERID as userId,
        DATE as date
        FROM MESSAGE
    </sql>

    <sql id="userFragment">
        <![CDATA[
        WHERE USERID = #userId#
        ]]>
        ORDER BY DATE
    </sql>

    <sql id="personFragment">
        <![CDATA[
        WHERE USERID = #userId# AND PERSONID = #personId#
        ]]>
        ORDER BY DATE
    </sql>
    
    <!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to
    be auto-mapped results to Message object (JavaBean) properties -->
    <select id="getAllMessages" resultClass="message" parameterClass="java.lang.Integer" cacheModel="messageCache">
        SELECT
        <include refid="messageColumnsFragment"/>
        ORDER BY DATE
    </select>

    <select id="countAllMessages" resultClass="java.lang.Integer" cacheModel="messageCache">
        SELECT
        COUNT(ID)
        FROM MESSAGE
    </select>

    <select id="getAllFeedbacks" resultClass="message" parameterClass="java.lang.Integer" cacheModel="messageCache">
        SELECT
        <include refid="messageColumnsFragment"/>
        <include refid="userFragment"/>
    </select>

    <select id="countAllFeedbacks" resultClass="java.lang.Integer" parameterClass="java.lang.Integer" cacheModel="messageCache">
        SELECT
        COUNT(ID)
        FROM MESSAGE
        <include refid="userFragment"/>
    </select>

    <select id="countAllNewFeedbacks" resultClass="java.lang.Integer" parameterClass="java.lang.Integer" cacheModel="messageCache">
        SELECT
        COUNT(ID)
        FROM MESSAGE
        <![CDATA[
        WHERE USERID = #userId# AND STATUS = '0'
        ]]>
    </select>

    <select id="getAllSightingsForPerson" resultClass="message" parameterClass="message" cacheModel="messageCache">
        SELECT
        <include refid="messageColumnsFragment"/>
        <include refid="personFragment"/>
    </select>

    <select id="countAllSightingsForPerson" resultClass="java.lang.Integer" parameterClass="message" cacheModel="messageCache">
        SELECT
        COUNT(ID)
        FROM MESSAGE
        <include refid="personFragment"/>
    </select>

    <select id="listAllSightingsForPerson" resultClass="message" parameterClass="java.lang.Integer" cacheModel="messageCache">
        SELECT
        <include refid="messageColumnsFragment"/>
        WHERE PERSONID = #personId#
        ORDER BY DATE DESC, ID DESC
    </select>

    <select id="countAllNewSightingsForPerson" resultClass="java.lang.Integer" parameterClass="message" cacheModel="messageCache">
        SELECT
        COUNT(ID)
        FROM MESSAGE
        <![CDATA[
        WHERE USERID = #userId# AND PERSONID = #personId# AND STATUS = '0'
        ]]>
    </select>

    <select id="countAllSightings" resultClass="java.lang.Integer" parameterClass="java.lang.Integer" cacheModel="messageCache">
        SELECT
        COUNT(ID)
        FROM MESSAGE
        <![CDATA[
        WHERE USERID = #userId# AND PERSONID > '0'
        ]]>
    </select>

    <select id="countAllNewSightings" resultClass="java.lang.Integer" parameterClass="java.lang.Integer" cacheModel="messageCache">
        SELECT
        COUNT(ID)
        FROM MESSAGE
        <![CDATA[
        WHERE USERID = #userId# AND PERSONID > '0' AND STATUS = '0'
        ]]>
    </select>
    
    <select id="getMessageById" parameterClass="java.lang.Integer" resultClass="message" cacheModel="messageCache">
        SELECT
        <include refid="messageColumnsFragment"/>
        <![CDATA[
        WHERE ID = #id#
        ]]>
    </select>

    <!-- Use Message object (JavaBean) properties as parameters for insert. Each of the
    parameters in the #hash# symbols is a JavaBeans property. -->
    <insert id="insertSighting" parameterClass="message">
        <![CDATA[
        INSERT INTO MESSAGE
        (FIRSTNAME, LASTNAME, EMAIL, SUBJECT, MESSAGE, IPADDRESS, PERSONID, USERID, DATE)
        VALUES
        (#firstName#, #lastName#, #email#, #subject#, #message#, #ipAddress#, #personId#, #userId#, #date#)
        ]]>
    </insert>
    
    <insert id="insertFeedback" parameterClass="message">
        <![CDATA[
        INSERT INTO MESSAGE
        (FIRSTNAME, LASTNAME, EMAIL, SUBJECT, MESSAGE, USERID, IPADDRESS, DATE)
        VALUES
        (#firstName#, #lastName#, #email#, #subject#, #message#, #userId#, #ipAddress#, #date#)
        ]]>
    </insert>

    <!-- Use Message object (JavaBean) properties as parameters for update. Each of the
    parameters in the #hash# symbols is a JavaBeans property. -->
    <update id="updateMessage" parameterClass="java.lang.Integer">
        <![CDATA[
        UPDATE MESSAGE SET
        STATUS = '1'
        WHERE ID = #id#
        ]]>
    </update>

    <!-- Use Message object (JavaBean) “id” properties as parameters for delete. Each of the
    parameters in the #hash# symbols is a JavaBeans property. -->
    <delete id="deleteMessage" parameterClass="java.lang.Integer">
        <![CDATA[
        DELETE FROM MESSAGE
        WHERE ID = #id#
        ]]>
    </delete>
</sqlMap>