<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Person">
    <!-- Type alias allow you to use a shorter name for long fully qualified class names. -->
    <typeAlias alias="person" type="com.googlecode.openmpis.dto.Person"/>
    
    <cacheModel id="personCache" type="LRU">
        <flushOnExecute statement="insertPerson"/>
        <flushOnExecute statement="updatePerson"/>
        <flushOnExecute statement="updatePersonRelative"/>
        <flushOnExecute statement="updatePersonInvestigator"/>
        <flushOnExecute statement="updatePersonAbductor"/>
        <flushOnExecute statement="deletePerson"/>
        <flushInterval hours="24"/>
    </cacheModel>

    <sql id="personColumnsFragment">
        ID as id,
        STATUS as status,
        TYPE as type,
        FIRSTNAME as firstName,
        NICKNAME as nickname,
        MIDDLENAME as middleName,
        LASTNAME as lastName,
        BIRTHMONTH as birthMonth,
        BIRTHDAY as birthDay,
        BIRTHYEAR as birthYear,
        STREET as street,
        CITY as city,
        PROVINCE as province,
        COUNTRY as country,
        SEX as sex,
        FEET as feet,
        INCHES as inches,
        WEIGHT as weight,
        RELIGION as religion,
        RACE as race,
        EYECOLOR as eyeColor,
        HAIRCOLOR as hairColor,
        MEDICALCONDITION as medicalCondition,
        MARKS as marks,
        PERSONALEFFECTS as personalEffects,
        REMARKS as remarks,
        MONTHMISSINGORFOUND as monthMissingOrFound,
        DAYMISSINGORFOUND as dayMissingOrFound,
        YEARMISSINGORFOUND as yearMissingOrFound,
        MISSINGFROMCITY as missingFromCity,
        MISSINGFROMPROVINCE as missingFromProvince,
        MISSINGFROMCOUNTRY as missingFromCountry,
        POSSIBLECITY as possibleCity,
        POSSIBLEPROVINCE as possibleProvince,
        POSSIBLECOUNTRY as possibleCountry,
        CIRCUMSTANCE as circumstance,
        REWARD as reward,
        INSTITUTION as institution,
        INSTITUTIONSTREET as institutionStreet,
        INSTITUTIONCITY as institutionCity,
        INSTITUTIONPROVINCE as institutionProvince,
        INSTITUTIONCOUNTRY as institutionCountry,
        INSTITUTIONEMAIL as institutionEmail,
        INSTITUTIONNUMBER as institutionNumber,
        PHOTO as photo,
        AGEDPHOTO as agedPhoto,
        CODISID as codisId,
        AFISID as afisId,
        DENTALID as dentalId,
        RELATIVEID as relativeId,
        ABDUCTORID as abductorId,
        INVESTIGATORID as investigatorId,
        RELATIONTORELATIVE as relationToRelative,
        RELATIONTOABDUCTOR as relationToAbductor,
        DATE as date,
        ENCODERID as encoderId
        FROM person
    </sql>

    <sql id="ongoingFragment">
        WHERE STATUS = '0'
    </sql>

    <sql id="solvedFragment">
        WHERE STATUS = '1'
    </sql>

    <sql id="unsolvedFragment">
        WHERE STATUS = '2'
    </sql>

    <sql id="missingColumnsFragment">
        ID as id,
        STATUS as status,
        TYPE as type,
        FIRSTNAME as firstName,
        NICKNAME as nickname,
        MIDDLENAME as middleName,
        LASTNAME as lastName,
        BIRTHMONTH as birthMonth,
        BIRTHDAY as birthDay,
        BIRTHYEAR as birthYear,
        STREET as street,
        CITY as city,
        PROVINCE as province,
        COUNTRY as country,
        SEX as sex,
        FEET as feet,
        INCHES as inches,
        WEIGHT as weight,
        RELIGION as religion,
        RACE as race,
        EYECOLOR as eyeColor,
        HAIRCOLOR as hairColor,
        MEDICALCONDITION as medicalCondition,
        MARKS as marks,
        PERSONALEFFECTS as personalEffects,
        REMARKS as remarks,
        MONTHMISSINGORFOUND as monthMissingOrFound,
        DAYMISSINGORFOUND as dayMissingOrFound,
        YEARMISSINGORFOUND as yearMissingOrFound,
        MISSINGFROMCITY as missingFromCity,
        MISSINGFROMPROVINCE as missingFromProvince,
        MISSINGFROMCOUNTRY as missingFromCountry,
        POSSIBLECITY as possibleCity,
        POSSIBLEPROVINCE as possibleProvince,
        POSSIBLECOUNTRY as possibleCountry,
        CIRCUMSTANCE as circumstance,
        REWARD as reward,
        PHOTO as photo,
        AGEDPHOTO as agedPhoto,
        CODISID as codisId,
        AFISID as afisId,
        DENTALID as dentalId,
        RELATIVEID as relativeId,
        ABDUCTORID as abductorId,
        INVESTIGATORID as investigatorId,
        RELATIONTORELATIVE as relationToRelative,
        RELATIONTOABDUCTOR as relationToAbductor,
        DATE as date,
        ENCODERID as encoderId
        FROM person
    </sql>

    <sql id="foundColumnsFragment">
        ID as id,
        STATUS as status,
        TYPE as type,
        FIRSTNAME as firstName,
        NICKNAME as nickname,
        MIDDLENAME as middleName,
        LASTNAME as lastName,
        BIRTHMONTH as birthMonth,
        BIRTHDAY as birthDay,
        BIRTHYEAR as birthYear,
        STREET as street,
        CITY as city,
        PROVINCE as province,
        COUNTRY as country,
        SEX as sex,
        FEET as feet,
        INCHES as inches,
        WEIGHT as weight,
        RELIGION as religion,
        RACE as race,
        EYECOLOR as eyeColor,
        HAIRCOLOR as hairColor,
        MEDICALCONDITION as medicalCondition,
        MARKS as marks,
        PERSONALEFFECTS as personalEffects,
        REMARKS as remarks,
        MONTHMISSINGORFOUND as monthMissingOrFound,
        DAYMISSINGORFOUND as dayMissingOrFound,
        YEARMISSINGORFOUND as yearMissingOrFound,
        INSTITUTION as institution,
        INSTITUTIONSTREET as institutionStreet,
        INSTITUTIONCITY as institutionCity,
        INSTITUTIONPROVINCE as institutionProvince,
        INSTITUTIONCOUNTRY as institutionCountry,
        INSTITUTIONEMAIL as institutionEmail,
        INSTITUTIONNUMBER as institutionNumber,
        PHOTO as photo,
        AGEDPHOTO as agedPhoto,
        CODISID as codisId,
        AFISID as afisId,
        DENTALID as dentalId,
        INVESTIGATORID as investigatorId,
        DATE as date,
        ENCODERID as encoderId
        FROM person
    </sql>

    <sql id="allMissingFragment">
        WHERE (TYPE = '0' OR TYPE = '1' OR TYPE = '2' OR TYPE = '3' OR TYPE = '4') AND STATUS = '0'
    </sql>

    <sql id="allSolvedMissingFragment">
        WHERE (TYPE = '0' OR TYPE = '1' OR TYPE = '2' OR TYPE = '3' OR TYPE = '4') AND STATUS = '1'
    </sql>

    <sql id="allUnsolvedMissingFragment">
        WHERE (TYPE = '0' OR TYPE = '1' OR TYPE = '2' OR TYPE = '3' OR TYPE = '4') AND STATUS = '2'
    </sql>

    <sql id="missingFragment">
        WHERE TYPE = '0' AND STATUS = '0'
    </sql>

    <sql id="solvedMissingFragment">
        WHERE TYPE = '0' AND STATUS = '1'
    </sql>

    <sql id="unsolvedMissingFragment">
        WHERE TYPE = '0' AND STATUS = '2'
    </sql>

    <sql id="familyAbductionFragment">
        WHERE TYPE = '1' AND STATUS = '0'
    </sql>

    <sql id="solvedFamilyAbductionFragment">
        WHERE TYPE = '1' AND STATUS = '1'
    </sql>

    <sql id="unsolvedFamilyAbductionFragment">
        WHERE TYPE = '1' AND STATUS = '2'
    </sql>

    <sql id="nonFamilyAbductionFragment">
        WHERE TYPE = '2' AND STATUS = '0'
    </sql>

    <sql id="solvedNonFamilyAbductionFragment">
        WHERE TYPE = '2' AND STATUS = '1'
    </sql>

    <sql id="unsolvedNonFamilyAbductionFragment">
        WHERE TYPE = '2' AND STATUS = '2'
    </sql>

    <sql id="runawayFragment">
        WHERE TYPE = '3' AND STATUS = '0'
    </sql>

    <sql id="solvedRunawayFragment">
        WHERE TYPE = '3' AND STATUS = '1'
    </sql>

    <sql id="unsolvedRunawayFragment">
        WHERE TYPE = '3' AND STATUS = '2'
    </sql>

    <sql id="unknownFragment">
        WHERE TYPE = '4' AND STATUS = '0'
    </sql>

    <sql id="solvedUnknownFragment">
        WHERE TYPE = '4' AND STATUS = '1'
    </sql>

    <sql id="unsolvedUnknownFragment">
        WHERE TYPE = '4' AND STATUS = '2'
    </sql>

    <sql id="allFoundFragment">
        WHERE (TYPE = '5' OR TYPE = '6' OR TYPE = '7') AND STATUS = '0'
    </sql>

    <sql id="allSolvedFoundFragment">
        WHERE (TYPE = '5' OR TYPE = '6' OR TYPE = '7') AND STATUS = '1'
    </sql>

    <sql id="allUnsolvedFoundFragment">
        WHERE (TYPE = '5' OR TYPE = '6' OR TYPE = '7') AND STATUS = '2'
    </sql>

    <sql id="foundFragment">
        WHERE TYPE = '5' AND STATUS = '0'
    </sql>

    <sql id="solvedFoundFragment">
        WHERE TYPE = '5' AND STATUS = '1'
    </sql>

    <sql id="unsolvedFoundFragment">
        WHERE TYPE = '5' AND STATUS = '2'
    </sql>

    <sql id="abandonedFragment">
        WHERE TYPE = '6' AND STATUS = '0'
    </sql>

    <sql id="solvedAbandonedFragment">
        WHERE TYPE = '6' AND STATUS = '1'
    </sql>

    <sql id="unsolvedAbandonedFragment">
        WHERE TYPE = '6' AND STATUS = '2'
    </sql>

    <sql id="throwawayFragment">
        WHERE TYPE = '7' AND STATUS = '0'
    </sql>

    <sql id="solvedThrowawayFragment">
        WHERE TYPE = '7' AND STATUS = '1'
    </sql>

    <sql id="unsolvedThrowawayFragment">
        WHERE TYPE = '7' AND STATUS = '2'
    </sql>

    <sql id="unidentifiedFragment">
        WHERE TYPE = '8' AND STATUS = '0'
    </sql>

    <sql id="solvedUnidentifiedFragment">
        WHERE TYPE = '8' AND STATUS = '1'
    </sql>

    <sql id="unsolvedUnidentifiedFragment">
        WHERE TYPE = '8' AND STATUS = '2'
    </sql>
    
    <!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to
    be auto-mapped results to Person object (JavaBean) properties -->
    <select id="getPersonById" parameterClass="java.lang.Integer" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="personColumnsFragment"/>
        <![CDATA[
        WHERE ID = #id#
        ]]>
    </select>

    <select id="getOngoingCaseById" parameterClass="java.lang.Integer" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="personColumnsFragment"/>
        <![CDATA[
        WHERE ID = #id#
        AND STATUS = '0'
        ]]>
    </select>

    <select id="getPersonsByEncoderId" parameterClass="java.lang.Integer" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="personColumnsFragment"/>
        <![CDATA[
        WHERE ENCODERID = #encoderId#
        AND STATUS = '0'
        ]]>
    </select>

    <select id="countPersonsByEncoderId" parameterClass="java.lang.Integer" resultClass="java.lang.Integer" cacheModel="personCache">
        <![CDATA[
        SELECT
        COUNT(ID)
        FROM person
        WHERE ENCODERID = #encoderId#
        AND STATUS = '0'
        ]]>
    </select>

    <select id="getPersonsByInvestigatorId" parameterClass="java.lang.Integer" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="personColumnsFragment"/>
        <![CDATA[
        WHERE INVESTIGATORID = #investigatorId#
        AND STATUS = '0'
        ]]>
    </select>

    <select id="countPersonsByInvestigatorId" parameterClass="java.lang.Integer" resultClass="java.lang.Integer" cacheModel="personCache">
        <![CDATA[
        SELECT
        COUNT(ID)
        FROM person
        WHERE INVESTIGATORID = #investigatorId#
        AND STATUS = '0'
        ]]>
    </select>

    <!-- According to person ID -->
    <select id="getAllPersons" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="personColumnsFragment"/>
        ORDER BY TYPE, YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countAllPersons" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
    </select>

    <select id="getOngoing" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="personColumnsFragment"/>
        <include refid="ongoingFragment"/>
        ORDER BY TYPE, YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countOngoing" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="ongoingFragment"/>
    </select>

    <select id="getSolved" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="personColumnsFragment"/>
        <include refid="solvedFragment"/>
        ORDER BY TYPE, YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countSolved" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="solvedFragment"/>
    </select>

    <select id="getUnsolved" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="personColumnsFragment"/>
        <include refid="unsolvedFragment"/>
        ORDER BY TYPE, YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countUnsolved" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="unsolvedFragment"/>
    </select>

    <select id="getAllMissing" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="missingColumnsFragment"/>
        <include refid="allMissingFragment"/>
        ORDER BY TYPE, YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countAllMissing" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="allMissingFragment"/>
    </select>

    <select id="countAllSolvedMissing" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="allSolvedMissingFragment"/>
    </select>

    <select id="countAllUnsolvedMissing" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="allUnsolvedMissingFragment"/>
    </select>

    <select id="getMissing" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="missingColumnsFragment"/>
        <include refid="missingFragment"/>
        ORDER BY YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countMissing" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="missingFragment"/>
    </select>

    <select id="countSolvedMissing" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="solvedMissingFragment"/>
    </select>

    <select id="countUnsolvedMissing" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="unsolvedMissingFragment"/>
    </select>

    <select id="listNewMissing" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="missingColumnsFragment"/>
        <include refid="allMissingFragment"/>
        ORDER BY YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
        LIMIT 4
    </select>

    <select id="getFamilyAbduction" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="missingColumnsFragment"/>
        <include refid="familyAbductionFragment"/>
        ORDER BY YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countFamilyAbduction" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="familyAbductionFragment"/>
    </select>

    <select id="countSolvedFamilyAbduction" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="solvedFamilyAbductionFragment"/>
    </select>

    <select id="countUnsolvedFamilyAbduction" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="unsolvedFamilyAbductionFragment"/>
    </select>

    <select id="getNonFamilyAbduction" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="missingColumnsFragment"/>
        <include refid="nonFamilyAbductionFragment"/>
        ORDER BY YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countNonFamilyAbduction" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="nonFamilyAbductionFragment"/>
    </select>

    <select id="countSolvedNonFamilyAbduction" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="solvedNonFamilyAbductionFragment"/>
    </select>

    <select id="countUnsolvedNonFamilyAbduction" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="unsolvedNonFamilyAbductionFragment"/>
    </select>

    <select id="getRunaway" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="missingColumnsFragment"/>
        <include refid="runawayFragment"/>
        ORDER BY YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countRunaway" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="runawayFragment"/>
    </select>

    <select id="countSolvedRunaway" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="solvedRunawayFragment"/>
    </select>

    <select id="countUnsolvedRunaway" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="unsolvedRunawayFragment"/>
    </select>

    <select id="getUnknown" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="missingColumnsFragment"/>
        <include refid="unknownFragment"/>
        ORDER BY YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countUnknown" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="unknownFragment"/>
    </select>

    <select id="countSolvedUnknown" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="solvedUnknownFragment"/>
    </select>

    <select id="countUnsolvedUnknown" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="unsolvedUnknownFragment"/>
    </select>

    <select id="getAllFound" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="foundColumnsFragment"/>
        <include refid="allFoundFragment"/>
        ORDER BY TYPE, YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countAllFound" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="allFoundFragment"/>
    </select>

    <select id="countAllSolvedFound" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="allSolvedFoundFragment"/>
    </select>

    <select id="countAllUnsolvedFound" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="allUnsolvedFoundFragment"/>
    </select>

    <select id="getFound" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="foundColumnsFragment"/>
        <include refid="foundFragment"/>
        ORDER BY YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countFound" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="foundFragment"/>
    </select>

    <select id="countSolvedFound" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="solvedFoundFragment"/>
    </select>

    <select id="countUnsolvedFound" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="unsolvedFoundFragment"/>
    </select>

    <select id="getAbandoned" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="foundColumnsFragment"/>
        <include refid="abandonedFragment"/>
        ORDER BY YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countAbandoned" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="abandonedFragment"/>
    </select>

    <select id="countSolvedAbandoned" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="solvedAbandonedFragment"/>
    </select>

    <select id="countUnsolvedAbandoned" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="unsolvedAbandonedFragment"/>
    </select>

    <select id="getThrowaway" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="foundColumnsFragment"/>
        <include refid="throwawayFragment"/>
        ORDER BY YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countThrowaway" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="throwawayFragment"/>
    </select>

    <select id="countSolvedThrowaway" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="solvedThrowawayFragment"/>
    </select>

    <select id="countUnsolvedThrowaway" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="unsolvedThrowawayFragment"/>
    </select>

    <select id="getUnidentified" resultClass="person" cacheModel="personCache">
        SELECT
        <include refid="foundColumnsFragment"/>
        <include refid="unidentifiedFragment"/>
        ORDER BY YEARMISSINGORFOUND DESC, MONTHMISSINGORFOUND DESC, DAYMISSINGORFOUND DESC, DATE DESC, ID DESC
    </select>

    <select id="countUnidentified" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="unidentifiedFragment"/>
    </select>

    <select id="countSolvedUnidentified" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="solvedUnidentifiedFragment"/>
    </select>

    <select id="countUnsolvedUnidentified" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        <include refid="unsolvedUnidentifiedFragment"/>
    </select>

    <select id="countPersonsByRelativeId" parameterClass="java.lang.Integer" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        WHERE RELATIVEID = #relativeId#
    </select>

    <select id="countPersonsByAbductorId" parameterClass="java.lang.Integer" resultClass="java.lang.Integer" cacheModel="personCache">
        SELECT
        COUNT(ID)
        FROM person
        WHERE ABDUCTORID = #abductorId#
    </select>

    <select id="checkPerson" parameterClass="person" resultClass="person" cacheModel="personCache">
        <![CDATA[
        SELECT
        FIRSTNAME as firstName
        FROM person
        WHERE (FIRSTNAME = #firstName# AND NICKNAME = #nickname# AND MIDDLENAME = #middleName# AND LASTNAME = #lastName#)
        ]]>
        <isGreaterThan prepend="AND" property="id" compareValue="0">
            <![CDATA[
            ID != #id#
            ]]>
        </isGreaterThan>
    </select>

    <select id="simpleSearchPerson" parameterClass="java.lang.String" resultClass="person" cacheModel="personCache">
        SELECT *
        FROM person
        WHERE
        FIRSTNAME LIKE "%$keyword$%"
        OR NICKNAME LIKE "%$keyword$%"
        OR MIDDLENAME LIKE "%$keyword$%"
        OR LASTNAME LIKE "%$keyword$%"
        OR CIRCUMSTANCE LIKE "%$keyword$%"
        OR PERSONALEFFECTS LIKE "%$keyword$%"
        OR REMARKS LIKE "%$keyword$%"
        OR MARKS LIKE "%$keyword$%"
        OR MEDICALCONDITION LIKE "%$keyword$%"
        OR CITY LIKE "%$keyword$%"
        OR PROVINCE LIKE "%$keyword$%"
        OR COUNTRY LIKE "%$keyword$%"
        OR MISSINGFROMCITY LIKE "%$keyword$%"
        OR MISSINGFROMPROVINCE LIKE "%$keyword$%"
        OR MISSINGFROMCOUNTRY LIKE "%$keyword$%"
        OR POSSIBLECITY LIKE "%$keyword$%"
        OR POSSIBLEPROVINCE LIKE "%$keyword$%"
        OR POSSIBLECOUNTRY LIKE "%$keyword$%"
        OR INSTITUTIONCITY LIKE "%$keyword$%"
        OR INSTITUTIONPROVINCE LIKE "%$keyword$%"
        OR INSTITUTIONCOUNTRY LIKE "%$keyword$%"
    </select>

    <!-- Use Person object (JavaBean) properties as parameters for insert. Each of the
    parameters in the #hash# symbols is a JavaBeans property. -->
    <insert id="insertPerson" parameterClass="person">
        <selectKey type="post" resultClass="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
        <![CDATA[
        INSERT INTO person
        (STATUS, TYPE, FIRSTNAME, NICKNAME, MIDDLENAME, LASTNAME, BIRTHMONTH, BIRTHDAY, BIRTHYEAR,
        STREET, CITY, PROVINCE, COUNTRY, SEX, FEET, INCHES, WEIGHT, RELIGION, RACE,
        EYECOLOR, HAIRCOLOR, MEDICALCONDITION, MARKS, PERSONALEFFECTS, REMARKS,
        MONTHMISSINGORFOUND, DAYMISSINGORFOUND, YEARMISSINGORFOUND, MISSINGFROMCITY, MISSINGFROMPROVINCE, MISSINGFROMCOUNTRY,
        POSSIBLECITY, POSSIBLEPROVINCE, POSSIBLECOUNTRY, CIRCUMSTANCE, REWARD,
        INSTITUTION, INSTITUTIONSTREET, INSTITUTIONCITY, INSTITUTIONPROVINCE, INSTITUTIONCOUNTRY,
        INSTITUTIONEMAIL, INSTITUTIONNUMBER, PHOTO, AGEDPHOTO, CODISID, AFISID, DENTALID, DATE, ENCODERID)
        VALUES
        (#status#, #type#, #firstName#, #nickname#, #middleName#, #lastName#, #birthMonth#, #birthDay#, #birthYear#,
        #street#, #city#, #province#, #country#, #sex#, #feet#, #inches#, #weight#, #religion#, #race#,
        #eyeColor#, #hairColor#, #medicalCondition#, #marks#, #personalEffects#, #remarks#,
        #monthMissingOrFound#, #dayMissingOrFound#, #yearMissingOrFound#, #missingFromCity#, #missingFromProvince#, #missingFromCountry#,
        #possibleCity#, #possibleProvince#, #possibleCountry#, #circumstance#, #reward#,
        #institution#, #institutionStreet#, #institutionCity#, #institutionProvince#, #institutionCountry#,
        #institutionEmail#, #institutionNumber#,#photo#, #agedPhoto#, #codisId#, #afisId#, #dentalId#, #date#, #encoderId#)
        ]]>
    </insert>

    <!-- Use Person object (JavaBean) properties as parameters for update. Each of the
    parameters in the #hash# symbols is a JavaBeans property. -->
    <update id="updatePerson" parameterClass="person">
        <![CDATA[
        UPDATE person SET
        STATUS = #status#,
        TYPE = #type#,
        FIRSTNAME = #firstName#,
        NICKNAME = #nickname#,
        MIDDLENAME = #middleName#,
        LASTNAME = #lastName#,
        BIRTHMONTH = #birthMonth#,
        BIRTHDAY = #birthDay#,
        BIRTHYEAR = #birthYear#,
        STREET = #street#,
        CITY = #city#,
        PROVINCE = #province#,
        COUNTRY = #country#,
        SEX = #sex#,
        FEET = #feet#,
        INCHES = #inches#,
        WEIGHT = #weight#,
        RELIGION = #religion#,
        RACE = #race#,
        EYECOLOR = #eyeColor#,
        HAIRCOLOR = #hairColor#,
        MEDICALCONDITION = #medicalCondition#,
        MARKS = #marks#,
        PERSONALEFFECTS = #personalEffects#,
        REMARKS = #remarks#,
        MONTHMISSINGORFOUND = #monthMissingOrFound#,
        DAYMISSINGORFOUND = #dayMissingOrFound#,
        YEARMISSINGORFOUND = #yearMissingOrFound#,
        MISSINGFROMCITY = #missingFromCity#,
        MISSINGFROMPROVINCE = #missingFromProvince#,
        MISSINGFROMCOUNTRY = #missingFromCountry#,
        POSSIBLECITY = #possibleCity#,
        POSSIBLEPROVINCE = #possibleProvince#,
        POSSIBLECOUNTRY = #possibleCountry#,
        CIRCUMSTANCE = #circumstance#,
        REWARD = #reward#,
        INSTITUTION = #institution#,
        INSTITUTIONSTREET = #institutionStreet#,
        INSTITUTIONCITY = #institutionCity#,
        INSTITUTIONPROVINCE = #institutionProvince#,
        INSTITUTIONCOUNTRY = #institutionCountry#,
        INSTITUTIONEMAIL = #institutionEmail#,
        INSTITUTIONNUMBER = #institutionNumber#,
        PHOTO = #photo#,
        AGEDPHOTO = #agedPhoto#,
        CODISID = #codisId#,
        AFISID = #afisId#,
        DENTALID = #dentalId#
        WHERE ID = #id#
        ]]>
    </update>
    
    <update id="updatePersonRelative" parameterClass="person">
        <![CDATA[
        UPDATE person SET
        RELATIVEID = #relativeId#,
        RELATIONTORELATIVE = #relationToRelative#
        WHERE ID = #id#
        ]]>
    </update>

    <update id="updatePersonInvestigator" parameterClass="person">
        <![CDATA[
        UPDATE person SET
        INVESTIGATORID = #investigatorId#
        WHERE ID = #id#
        ]]>
    </update>

    <update id="updatePersonEncoder" parameterClass="person">
        <![CDATA[
        UPDATE person SET
        ENCODERID = #encoderId#
        WHERE ID = #id#
        ]]>
    </update>

    <update id="updatePersonAbductor" parameterClass="person">
        <![CDATA[
        UPDATE person SET
        ABDUCTORID = #abductorId#,
        RELATIONTOABDUCTOR = #relationToAbductor#
        WHERE ID = #id#
        ]]>
    </update>

    <!-- Use Person object (JavaBean) “id” properties as parameters for delete. Each of the
    parameters in the #hash# symbols is a JavaBeans property. -->
    <delete id="deletePerson" parameterClass="java.lang.Integer">
        <![CDATA[
        DELETE FROM person
        WHERE ID = #id#
        ]]>
    </delete>
</sqlMap>