<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Relative">
    <!-- Type alias allow you to use a shorter name for long fully qualified class names. -->
    <typeAlias alias="relative" type="com.googlecode.openmpis.dto.Relative"/>
    
    <cacheModel id="relativeCache" type="LRU">
        <flushOnExecute statement="insertRelative"/>
        <flushOnExecute statement="updateRelative"/>
        <flushOnExecute statement="deleteRelative"/>
        <flushInterval hours="24"/>
    </cacheModel>

    <sql id="relativeColumnsFragment">
        ID as id,
        FIRSTNAME as firstName,
        MIDDLENAME as middleName,
        LASTNAME as lastName,
        EMAIL as email,
        STREET as street,
        CITY as city,
        PROVINCE as province,
        COUNTRY as country,
        NUMBER as number
        FROM relative
    </sql>
    
    <!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to
    be auto-mapped results to Person object (JavaBean) properties -->
    <select id="getRelativeById" parameterClass="java.lang.Integer" resultClass="relative" cacheModel="relativeCache">
        SELECT
        <include refid="relativeColumnsFragment"/>
        <![CDATA[
        WHERE ID = #id#
        ]]>
    </select>

    <select id="getAllRelatives" resultClass="relative" cacheModel="relativeCache">
        SELECT
        <include refid="relativeColumnsFragment"/>
        ORDER BY ID
    </select>

    <select id="listAllRelatives" resultClass="relative" cacheModel="relativeCache">
        SELECT
        <include refid="relativeColumnsFragment"/>
        ORDER BY LASTNAME, FIRSTNAME
    </select>

    <select id="countAllRelatives" resultClass="java.lang.Integer" cacheModel="relativeCache">
        SELECT
        COUNT(ID)
        FROM relative
    </select>

    <select id="checkRelative" parameterClass="relative" resultClass="relative" cacheModel="relativeCache">
        <![CDATA[
        SELECT
        FIRSTNAME as firstName
        FROM relative
        WHERE
        (FIRSTNAME = #firstName# AND MIDDLENAME = #middleName# AND LASTNAME = #lastName#)
        ]]>
        <isGreaterThan prepend="AND" property="id" compareValue="0">
            <![CDATA[
            ID != #id#
            ]]>
        </isGreaterThan>
    </select>

    <select id="checkRelativeEmail" parameterClass="relative" resultClass="relative" cacheModel="relativeCache">
        <![CDATA[
        SELECT
        FIRSTNAME as firstName
        FROM relative
        WHERE EMAIL = #email#
        ]]>
        <isGreaterThan prepend="AND" property="id" compareValue="0">
            <![CDATA[
            ID != #id#
            ]]>
        </isGreaterThan>
    </select>

    <select id="checkRelativeNumber" parameterClass="relative" resultClass="relative" cacheModel="relativeCache">
        <![CDATA[
        SELECT
        FIRSTNAME as firstName
        FROM relative
        WHERE NUMBER = #number#
        ]]>
        <isGreaterThan prepend="AND" property="id" compareValue="0">
            <![CDATA[
            ID != #id#
            ]]>
        </isGreaterThan>
    </select>

    <!-- Use Person object (JavaBean) properties as parameters for insert. Each of the
    parameters in the #hash# symbols is a JavaBeans property. -->
    <insert id="insertRelative" parameterClass="relative">
        <selectKey type="post" resultClass="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
        <![CDATA[
        INSERT INTO relative
        (FIRSTNAME, MIDDLENAME, LASTNAME, EMAIL, STREET,
        CITY, PROVINCE, COUNTRY, NUMBER)
        VALUES
        (#firstName#, #middleName#, #lastName#, #email#, #street#,
        #city#, #province#, #country#, #number#)
        ]]>
    </insert>

    <!-- Use Person object (JavaBean) properties as parameters for update. Each of the
    parameters in the #hash# symbols is a JavaBeans property. -->
    <update id="updateRelative" parameterClass="relative">
        <![CDATA[
        UPDATE relative SET
        FIRSTNAME = #firstName#,
        MIDDLENAME = #middleName#,
        LASTNAME = #lastName#,
        EMAIL = #email#,
        STREET = #street#,
        CITY = #city#,
        PROVINCE = #province#,
        COUNTRY = #country#,
        NUMBER = #number#
        WHERE ID = #id#
        ]]>
    </update>

    <!-- Use Person object (JavaBean) “id” properties as parameters for delete. Each of the
    parameters in the #hash# symbols is a JavaBeans property. -->
    <delete id="deleteRelative" parameterClass="java.lang.Integer">
        <![CDATA[
        DELETE FROM relative
        WHERE ID = #id#
        ]]>
    </delete>
</sqlMap>