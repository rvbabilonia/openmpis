buildscript {
    ext {
        springBootVersion = "1.5.6.RELEASE"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.springframework.boot"

jar {
    baseName = "openmpis-user"
    version = "2.0-SNAPSHOT"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    springCloudDependenciesVersion = "Dalston.SR3"
    berkeleyVersion = "7.4.5"
    validationVersion = "2.0.0.Final"
    springVersion = "5.2.0.RELEASE"
    logbackVersion = "1.2.3"
    springfoxSwaggerVersion = "2.9.2"
    junitVersion = "4.12"
}

repositories {
    mavenCentral()
    maven {
        url "http://download.oracle.com/maven"
    }
}

dependencies {
    compile "org.springframework.cloud:spring-cloud-starter-eureka"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework:spring-core"
    compile "org.springframework:spring-beans"
    compile "org.springframework:spring-tx"
    compile "org.springframework.boot:spring-boot-starter-hateoas"
    compile "com.sleepycat:je:${berkeleyVersion}"
    compile "javax.validation:validation-api:${validationVersion}"
    compile "ch.qos.logback:logback-core:${logbackVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "io.springfox:springfox-swagger2:${springfoxSwaggerVersion}"
    compile "io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}"
    compile project(":openmpis-common")

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.springframework.cloud:spring-cloud-starter-eureka-server"
    testCompile "org.springframework:spring-test"
    testCompile "junit:junit:${junitVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}"
        mavenBom "org.springframework:spring-framework-bom:${springVersion}"
    }
}

eclipse {
    classpath {
        containers.remove("org.eclipse.jdt.launching.JRE_CONTAINER")
        containers "org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8"
    }
}

task generateJavadocs(type: Javadoc) {
    classpath = configurations.compile
    source = sourceSets.main.allJava
}
